plugins {
    id 'java'
}

group 'com.gg'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

// JAXB configuration holds classpath for running the JAXB XJC compiler
configurations {
    jaxb
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/resources'
        }
    }
    generated {
        java.srcDir "src/main/java"
    }
}
dependencies {
    jaxb "org.glassfish.jaxb:jaxb-xjc:4.0.1"
    jaxb "org.glassfish.jaxb:jaxb-runtime:4.0.1"

    runtimeElements('junit:junit:4.13.2')

    runtimeElements('org.springframework:spring-core:6.0.3')
    runtimeElements('org.springframework:spring-webmvc:6.0.3')
    runtimeElements('org.springframework.boot:spring-boot:3.0.1')
    runtimeElements('org.springframework.boot:spring-boot-autoconfigure:3.0.1')
    runtimeElements('com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.14.0')
    runtimeElements('javax.annotation:javax.annotation-api:1.3.2')
    runtimeElements('javax.inject:javax.inject:1')

    runtimeElements('com.ibm.mq:mq-jms-spring-boot-starter:3.0.6') {
        exclude module: 'spring-boot-starter-logging'
    }

    apiElements('junit:junit:4.13.2')
    apiElements('org.springframework:spring-core:6.0.3')
    apiElements('org.springframework:spring-webmvc:6.0.3')
    apiElements('org.springframework.boot:spring-boot:3.0.1')
    apiElements('org.springframework.boot:spring-boot-autoconfigure:3.0.1')
    apiElements('com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.14.0')
    apiElements('javax.annotation:javax.annotation-api:1.3.2')
    apiElements('javax.inject:javax.inject:1')
    apiElements('com.ibm.mq:mq-jms-spring-boot-starter:3.0.6') {
        exclude module: 'spring-boot-starter-logging'
    }

    apiElements('jakarta.xml.bind:jakarta.xml.bind-api:4.0.0')
    runtimeElements('jakarta.xml.bind:jakarta.xml.bind-api:4.0.0')


    implementation('jakarta.xml.bind:jakarta.xml.bind-api:4.0.0')
    implementation('com.sun.xml.bind:jaxb-impl:4.0.0')

    apiElements('com.sun.xml.bind:jaxb-impl:4.0.0')
    runtimeElements('com.sun.xml.bind:jaxb-impl:4.0.0')
}

// Cookie cutter function for defining multiple XJC tasks
def addXjcTask(taskName, schema, pkg, dest) {

    // If you haven't already, create the generated output dir before running XJC or it will fail
    file(dest).mkdirs()


    // The main XJC task, calls XJCFacade which is the entry point of the XJC JAR
    tasks.create(name: taskName, type: JavaExec) {
        classpath configurations.jaxb
        mainClass = 'com.sun.tools.xjc.XJCFacade'

        // To explore available args, download the XJC JAR and run java -jar jaxb-xjc.jar --help
        args schema, "-p", pkg, "-d", dest, "-no-header"
    }
}

// Add all the XJC tasks you need
addXjcTask("maven-xsd",
        "src/main/java/schema/",
        "com.gg.generated",
        "src/main/java")

tasks.register("generateSources") {
    description "Generate Java sources fram XSD files"
    dependsOn tasks.getByName("maven-xsd")
}

tasks.withType(JavaCompile).configureEach {
    dependsOn("generateSources")
}

test {
    useJUnitPlatform()
}